1+2
install.packages("rgl")
library("rgl", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
demo(rgl)
4/4
1+1
2-2
3*3
4/4
(1+2)*3/4; 1*2/(3-2+1)
1:10
c(1,3,8)+1
1+2+3+
+4+5+6
1+2+3+
4+5+6
x<-c(1.0,1.2,1.3)
x<-c(1.0,1.2,1.3)
x
x <- c (1.0, 1.2, 1.3)
x
x * 10
y <- ?Γc???L
y <- "?Γc???L"
y
x <- c (1.0, 1.2, 1.3)
x
x * 10
y <- 石田基広
y <- "石田基広"
y
fix(`y1122`)
fix(`y11`)
fix(xl)
fix(`y1122`)
(石田 <- "基広" ) # 丸括弧を使って代入と同時に中身を表示
_underBar <- 5
$4 <- 5
LETTERS
letters
(1:10)
charToRaw("あ")
dogs <- c ("モモ", "チョコ", "マロン", "ナナ")
# その犬種を名前として情報登録する
names (dogs) <- c ("チワワ", "コーギ", "柴犬", "コーギ" ) ; dogs
dogs ["コーギ"]
x <- 1:100       # 1, 2, 3, ..., 98, 99, 100 のベクトル
sum (x)          # 合計
mean (x)         # 平均
y <- 1:3         # 1,2,3 のベクトル
rep (y, 3)       # 3 回繰り返す
help.search("sequence")
x <- 1:6
sample (x, 1)
x <- 1:6
sample (x, 1)
sample (x, 10)
x <- 1:6
sample (x, 1)
sample (x, 10, rep = TRUE)
kuji <- c ("大吉", "中吉", "小吉") # 札を用意
kuji
# [1] "大吉" "中吉" "小吉"
kuji <- c ("大吉", "中吉", "小吉") # 札を用意
kuji
sample (kuji, 1)                   # おみくじを引く
x <- sample (kuji, 10000, rep = T,  prob = c(1/10, 2/10, 7/10) )
kuji
x
(z <- table (x) )
z
barplot (z)
x <- 'あいう'
y <- "DEF"
x:y
x;y
paste (LETTERS, collapse = "")
# [1] "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
strsplit (x, "")
LETTERS
letters
paste (LETTERS, collapse = "")
# [1] "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
strsplit (x, "")
## [[1]]
x <- c ("男", "女")
x
class (x)
xf <- as.factor (x)
xf
class (xf)
class(x)
str (xf)
dogs [names (dogs) %in%  "コーギ"]
head (sleep)
sleep
dogs [names (dogs) %in%  "コーギ"]
which ( z %in% c ("AB", "B") )
summary (sleep)
str (x)       # 構造を確認
str (x)       # 構造を確認
x $ New <- c ("あ", "い", "う", "え", "お")
nrow (x)
## [1] 5
ncol (x)
## [1] 3
x
##   Num Cha New
## 1   1   A  あ
## 2   2   B  い
## 3   3   C  う
## 4   4   D  え
## 5   5   E  お
str (x)       # 構造を確認
## 'data.frame':	5 obs. of  3 variables:
##  $ Num: int  1 2 3 4 5
##  $ Cha: Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5
##  $ New: chr  "あ" "い" "う" "え" ...
x [1:3, c (1,3)]
x $ New <- c ("あ", "い", "う", "え", "お")
x <- data.frame (Num = 1:5, Cha = LETTERS[1:5])
x
x $ New <- c ("あ", "い", "う", "え", "お")
nrow (x)
## [1] 5
ncol (x)
## [1] 3
x
##   Num Cha New
## 1   1   A  あ
## 2   2   B  い
## 3   3   C  う
## 4   4   D  え
## 5   5   E  お
str (x)       # 構造を確認
## 'data.frame':	5 obs. of  3 variables:
##  $ Num: int  1 2 3 4 5
##  $ Cha: Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5
##  $ New: chr  "あ" "い" "う" "え" ...
x [1:3, c (1,3)]
(x <- matrix (1:9, ncol = 3))
HairEyeColor
HairEyeColor [ , , Sex = "Female"]
x <- lm (dist ~ speed, data = cars)
str (x)
x [[1]]
x [[1]][1]
x <- 8
if (x <5) print("はい") else print ("いいえ")
if (x >= 5)
"はい"
else
"いいえ"
x <- 11
if (x <= 5){
"5以下です"
} else if (x <= 10) {
"5より大きく10以下"
} else {
"10を超えます"
}
x <- 1:10
if (x < 5) print ("X < 5") else print ("x >= 5")
ifelse(x > 5, "YES", "NO")
y <- ifelse(x > 5,
{cat("YES"); print (x / 10)},
{cat ("NO"); print (x * 10)}
)
y
res <- numeric (1000)
res
myName
myName()
myName <- function () {
print ("石田基広")
}
myName
myName()
dice <- function (face, toss, TURE) {
sample(x=1:face, size = toss, rep = TURE)
}
dice(6,10)
dice <- function (face, toss, TURE) {
sample(x=1:face, size = toss, rep = TURE)
}
dice(6,10)
dice <- function (face, toss, TRUE) {
sample(x=1:face, size = toss, rep = TRUE)
}
dice <- function (face, toss, TRUE) {
sample(x=1:face, size = toss, rep = TRUE)
}
dice <- function (face, toss) {
sample(x=1:face, size = toss, rep = TRUE)
}
dice(6,10)
dice (to = 3)
dice <- function (face = 6, toss = 1){
sample(x = 1:face, size = toss, rep = TRUE)
}
dice (to = 3)
dice (0)
dice <- function (face = 6, toss = 1){
if (face < 2 || toss < 1) stop ("引数が不正です")
sample(x = 1:face, size = toss, rep = TRUE)
}
dice (1)
methods (plot)
getS3method (f = "plot", class = "histogram")
x <- "A"
print (x)
print.str <- function (x) {
cat ("x = ", x, "; charToRaw (x) = ", charToRaw (x), "\n");
}
class (x) <- "str"
print (x)
setClass (Class = "family",
representation (mother = "character",
father = "character",
children = "numeric"),
prototype (mother = "母", father =  "父",
children = 0) )
fm1 <- new ("family", mother = "花子", father = "一郎",
children = 3)
fm1
setMethod (f = "show", signature = "family",
function (object) {
# 父親と母親だけ表示
cat (object@father, object@mother, "\n")
} )
getGeneric("show")
setValidity ("family", function (object) {
if (nchar (object@mother) < 1 | nchar (object@father) < 1 )
return (FALSE)
})
fm2 <- new ("family",  mother = "", father = "", children = 3  )
print (i)
fm1 <- new ("family", mother = "花子",
father = "一郎", children = 3)
fm1
A1 <- 1:9
A2 <- 1:9
A1 * A2
as.matrix (A1) # 行列に変換
t (A2)
class (t (A1)) # クラスは行列
A1 %*% t (A2)
outer (A1, A1, "*")
outer (A1, A1, "+")
paste (1:9, 1:9, sep = "*")
outer (1:9, 1:9,  paste, sep = "*")
paste( outer (1:9, 1:9,  paste, sep = "*"), outer (1:9, 1:9, "*"), sep = "=")
options ()
x <- c ("加藤", "佐藤", "鈴木", "田中", "野田")
y <- c (100, 90, 80, 70, 60)
xy <- data.frame (Name = x, Score = y)
xy
(tmp <- paste ("student", 1:5, sep = "-"))
xy $ ID <- tmp
xy
xy2 <- xy [ , c ("ID", "Score")]
View(xy2)
View(xy2)
xy2
x <- c ("ABC", "efghi")
length (x)
## [1] 2
nchar (x)
tolower(index)  # 大文字を小文字に変換
index <- "A CERTAIN MAGICAL INDEX" # これは文字列としては1個
length (index) # 1個の文字列
toupper (x)     # 小文字を大文字に
toupper (x)     # 小文字を大文字に
x <- c ("ABC", "efghi")
length (x)
## [1] 2
nchar (x)
tolower(index)  # 大文字を小文字に変換
## [1] "a certain magical index"
toupper (x)     # 小文字を大文字に
alice <-  c ("Alice was beginning to get very tired of sitting by her sister on the bank",
"and of having nothing to do:")
length (alice)
## [1] 2
nchar (alice)
## [1] 74 28
strsplit (alice, " ") # 文字列を空白で切り取ってベクトル化する
alice2 <- unlist (strsplit (alice, " ")) # 結果のリストをベクトルに変換
alice2
table (alice2) # 頻度表を作成
as.data.frame (table (alice2))
alice3 <- readLines (file ("http://www.gutenberg.org/files/11/11.txt"))
head (alice3, 50)
grep ("THE END", alice3)
alice3 [3365:3375]
alice3 <- alice3 [41:3370]
head (alice3)
tail (alice3)
alice.vec <- unlist (strsplit (alice3, split = "[[:space:]]+|[[:punct:]]+"))
length (alice.vec)
head (alice.vec)
sum (alice.vec == "")
alice.vec <- alice.vec [alice.vec != ""]
# 解析結果の長さ，つまり総単語数を求める
length(alice.vec)
sum (alice.vec == "the")
alice.freq <- as.data.frame (table (alice.vec))
alice.sorted <- alice.freq [order (alice.freq$Freq, decreasing = TRUE), ]
head (alice.sorted)
x <- c (3, 1, 2, 5, 4)
sort (x)
x <- c (3, 1, 2, 5, 4)
x [order(x)]
x <- c (3, 1, 2, 5, 4)
order (x) # 並びかえた場合の，もとの位置番号
## [1] 2 3 1 5 4
# 最小値である1はベクトルの2番目の要素
x [order(x)]
alice.sorted2 <- alice.freq [order (alice.freq$alice.vec),]
head (alice.sorted2)
install.packages ("Snowball")
library (Snowball)
install.packages("Snowball")
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
remove.packages("Snowball")
install.packages("Snowball")
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:Snowball", unload=TRUE)
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:Snowball", unload=TRUE)
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:Snowball", unload=TRUE)
remove.packages("Snowball")
install.packages ("Snowball")
library (Snowball)
library("rJava", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:rJava", unload=TRUE)
library("RWeka", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:RWeka", unload=TRUE)
library("RWekajars", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("RWeka", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("rJava", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:Snowball", unload=TRUE)
detach("package:RWekajars", unload=TRUE)
detach("package:RWeka", unload=TRUE)
detach("package:rJava", unload=TRUE)
remove.packages("rJava")
remove.packages("RWeka")
remove.packages("RWekajars")
remove.packages("Snowball")
install.packages("Snowball")
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
detach("package:Snowball", unload=TRUE)
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("RWekajars", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("RWeka", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("rJava", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library("Snowball", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
library(Snowball)
example(SnowballStemmer)
install.packages("C:/Users/y-yoshimura/Desktop/RMeCab_0.996.zip", repos = NULL)
library("RMeCab", lib.loc="C:/Users/y-yoshimura/Documents/R/win-library/2.15")
setwd ("C:/data")
res <- RMeCabC ("ご飯を食べた", 1)
unlist (res)
dazai <- docDF ("merosu.txt")
dazai <- docDF ("merosu.txt")
head (dazai)
tail (dazai)
dazai <- docDF("merosu.txt",type = 1)
head (dazai)
tail (dazai)
dazai2 <- dazai [(dazai$POS1 %in% c("名詞","形容詞")), ]
nrow (dazai2)
dazai <- docDF ("merosu.txt", type = 1, pos = c("名詞","形容詞"))
head (dazai [order(dazai$merosu.txt, decreasing = TRUE),], 10)
plot (1:10, cex = 2, cex.lab = 1.5, cex.axis = 1.3)
dev.off()
par(oma = rep(3, 4), bg = "gray")
plot(c(0, 1), c(0, 1), type="n", ann = FALSE, axes = FALSE)
par(xpd = TRUE) # 作図領域に加工を加える
rect(par()$usr[1] - par()$mai[2], par()$usr[3] - par()$mai[1],
col = "yellow", border = NA)
par(xpd = FALSE) # 描画の対象をプロット領域に戻す
rect(par()$usr[1], par()$usr[3],
par()$usr[2], par()$usr[4],
col = "white", border = NA)
box("plot", lty = "dashed", col = "green") # プロット領域を囲む
text(.5, .5, "plot region", cex = 1.8)
# 四つの内部マージンに描画
mtext("figure region", side = 3, line = 2, adj = 1, cex = 1.8)
# line = 2 は内部マージン上(side=3) の 2 行目の高さに描くことを指定
# adj は 0 なら左端，1 なら右端に描画．
for (i in 1:4)
mtext(paste("inner margin", i), side = i, cex = 1.4,
las = 0, line = 1, outer = FALSE)
# 四つの外部マージンに描画# outer = TRUE
for (i in 1:4)
mtext(paste("outer margin", i), side = i, cex = 1.4,
las = 0, line = 1, outer = TRUE)
# 外部マージンにラベルを付ける
mtext("device region", side=3, line=2, adj = 1, outer = TRUE,cex = 1.8)
# 最後にプロット全体を赤い枠で囲む
box("outer", col = "red", lwd = 3)
# axis(1) # これまで作成した図と重なるが，x 軸の目盛を描く
# axis(2) # y 軸の目盛を描く
dev.off()
plot (1:10, type = "n")
text (1:10, LETTERS [1:10], col = 1:10, cex = 1:10)
library("manipulate", lib.loc="C:/Program Files/RStudio/R/library")
manipulate (plot (1:10, col = myColors),
myColors = pickers ("red", "green", "blue"))
manipulate (plot (1:10, col = myColors),
myColors = pickers ("red", "green", "blue"))
manipulate(
plot (cars, xlim = c (x.min, x.max), type = type,
axes = axes, ann = label),
x.min = slider (0,15),
x.max = slider (15,30, initial = 25),
type = picker ("p", "l", "b", "c", "o", "h", "s", "S", "n"),
axes = checkbox (TRUE, "Draw Axes"),
label = checkbox (FALSE, "Draw Labels")
)
plot (cars, type = "h")
dev.off()
plot (cars, type = "h")
plot (cars, type = "h")
dev.off()
cars $ speed2 <-  speed * 1.6
cars $ dist2 <- dist * 0.3
head (cars)
cars <- transform (cars, speed2 = speed * 1.6, dist2 = dist * 0.3)
plot (dist2 ~ speed2, data = cars2,
main = "速度と停止距離の関係",
sub = "datasets::carsの変数を変換",
xlab = "速度 (km/h)", ylab = "距離 (m)")
identify (cars2 [, c ("speed2", "dist2")])
text (locator (1), "トヨタ")
cars <- transform (cars, speed2 = speed * 1.6, dist2 = dist * 0.3)
plot (dist2 ~ speed2, data = cars2,
main = "速度と停止距離の関係",
sub = "datasets::carsの変数を変換",
xlab = "速度 (km/h)", ylab = "距離 (m)")
identify (cars2 [, c ("speed2", "dist2")])
cars $ speed2 <-  speed * 1.6
cars $ dist2 <- dist * 0.3
head (cars)
cars <- transform (cars, speed2 = speed * 1.6, dist2 = dist * 0.3)
plot (dist2 ~ speed2, data = cars2,
main = "速度と停止距離の関係",
sub = "datasets::carsの変数を変換",
xlab = "速度 (km/h)", ylab = "距離 (m)")
identify (cars2 [, c ("speed2", "dist2")])
identify (cars2 [, c ("speed2", "dist2")])
plot (dist2 ~ speed2, data = cars2,
main = "速度と停止距離の関係",
sub = "datasets::carsの変数を変換",
xlab = "速度 (km/h)", ylab = "距離 (m)")
plot (dist2 ~ speed2, data = cars,
main = "速度と停止距離の関係",
sub = "datasets::carsの変数を変換",
xlab = "速度 (km/h)", ylab = "距離 (m)")
identify (cars [, c ("speed2", "dist2")])
text (locator (1), "トヨタ")
text (locator (2), c ("トヨタ", "日産"))
plot (Petal.Width ~ Petal.Length,
pch = c (Species), col = Species,
las = 1,  cex = 1.8,  data = iris,
xlab  = "花びらの長さ (cm)",
ylab = "花びらの幅 (cm)")
legend (locator (1),  legend = levels (iris$Species),
pch = 1:3, col = 1:3,  text.col = 1:3, cex = 1.8)
library (lattice)
xyplot (Sepal.Width ~ Sepal.Length,
groups = Species, data = iris)
pdf (file = "C:/data/Iris.pdf")
xyplot (Sepal.Width ~ Sepal.Length,  groups = Species, data = iris)
dev.off()
library (ggplot2)
install.packages("ggplot2")
library (ggplot2)
p2 <- p + geom_point(aes(colour = Species))
print (p2)
p <- ggplot (iris, aes(Sepal.Width, Sepal.Length))
p2 <- p + geom_point(aes(colour = Species))
print (p2)
print (p2)
print (p2)
p2
p2
library (ggplot2)
p <- ggplot (iris, aes(Sepal.Width, Sepal.Length))
p2 <- p + geom_point(aes(colour = Species))
print (p2)
?VADeath
nrow (VADeaths); ncol (VADeaths) # 行数と列数
rownames (VADeaths)
colnames (VADeaths)
barplot (VADeaths)
